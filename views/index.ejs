<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Federato & To-Do List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f4f4f4;
            margin: 0;
            padding: 50px;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            display: inline-block;
        }
        h1 {
            color: #333;
        }
        .btn {
            display: inline-block;
            padding: 10px 15px;
            font-size: 16px;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 10px;
            cursor: pointer;
            border: none;
        }
        .login-btn { background-color: #4285F4; color: white; }
        .logout-btn { background-color: #d9534f; color: white; }
        .export-btn { background-color: #17a2b8; color: white; }
        .import-btn { background-color: #ffc107; color: black; }
        .todo-container { margin-top: 20px; text-align: left; }
        ul { list-style-type: none; padding: 0; }
        li {
            background: #eee;
            padding: 10px;
            margin: 5px 0;
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .completed { text-decoration: line-through; color: gray; }
        .add-task { margin-top: 10px; display: flex; justify-content: space-between; }
        .task-input {
            width: 70%;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .add-btn { background-color: #28a745; color: white; }
        .delete-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 8px;
            cursor: pointer;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Benvenuto</h1>
        <% if (user) { %>
            <p><strong><%= user.displayName %></strong></p>
            <a href="/logout" class="btn logout-btn">Logout</a>

            <!-- To-Do List -->
            <div class="todo-container">
                <h2>Lista Attivit√†</h2>
                <ul id="task-list"></ul>
                <div class="add-task">
                    <input type="text" id="task-input" class="task-input" placeholder="Aggiungi nuova attivit√†">
                    <button class="btn add-btn" onclick="addTask()">Aggiungi</button>
                </div>
                <button class="btn export-btn" onclick="exportTasks()">üì• Scarica Lista</button>
                <input type="file" id="import-file" accept=".json" style="display: none" onchange="importTasks(event)">
                <button class="btn import-btn" onclick="document.getElementById('import-file').click()">üì§ Carica Lista</button>
            </div>

        <% } else { %>
            <p>Accedi per continuare</p>
            <a href="/auth/google" class="btn login-btn">Login con Google</a>
        <% } %>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            loadTasks();
        });

        function addTask() {
            let input = document.getElementById("task-input");
            let taskText = input.value.trim();
            if (taskText === "") return;

            let taskList = document.getElementById("task-list");
            let li = document.createElement("li");
            li.innerHTML = `
                <input type="checkbox" onclick="toggleTask(this)">
                <span>${taskText}</span>
                <button class="delete-btn" onclick="removeTask(this)">üóëÔ∏è</button>
            `;
            taskList.appendChild(li);

            input.value = "";
            saveTasks();
        }

        function toggleTask(checkbox) {
            let span = checkbox.nextElementSibling;
            span.classList.toggle("completed", checkbox.checked);
            saveTasks();
        }

        function removeTask(button) {
            button.parentElement.remove();
            saveTasks();
        }

        function saveTasks() {
            let tasks = [];
            document.querySelectorAll("#task-list li").forEach(li => {
                tasks.push({ 
                    text: li.querySelector("span").textContent.trim(), 
                    done: li.querySelector("input").checked 
                });
            });
            localStorage.setItem("tasks", JSON.stringify(tasks));
        }

        function loadTasks() {
            let taskList = document.getElementById("task-list");
            taskList.innerHTML = "";  
            let savedTasks = JSON.parse(localStorage.getItem("tasks")) || [];
            savedTasks.forEach(task => {
                let li = document.createElement("li");
                li.innerHTML = `
                    <input type="checkbox" onclick="toggleTask(this)" ${task.done ? "checked" : ""}>
                    <span class="${task.done ? "completed" : ""}">${task.text}</span>
                    <button class="delete-btn" onclick="removeTask(this)">üóëÔ∏è</button>
                `;
                taskList.appendChild(li);
            });
        }

        function exportTasks() {
            let tasks = localStorage.getItem("tasks");
            if (!tasks) {
                alert("Nessuna attivit√† da esportare!");
                return;
            }

            let blob = new Blob([tasks], { type: "application/json" });
            let a = document.createElement("a");
            a.href = URL.createObjectURL(blob);
            a.download = "lista_attivit√†.json";
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }

        function importTasks(event) {
            let file = event.target.files[0];
            if (!file) return;

            let reader = new FileReader();
            reader.onload = function(e) {
                try {
                    let tasks = JSON.parse(e.target.result);
                    localStorage.setItem("tasks", JSON.stringify(tasks));
                    loadTasks();
                } catch (error) {
                    alert("Errore nel caricamento del file. Assicurati che sia un JSON valido.");
                }
            };
            reader.readAsText(file);
        }
    </script>
</body>
</html>
